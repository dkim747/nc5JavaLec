package chap16_collectionFramework;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

public class _05_linkedList {

	public static void main(String[] args) {
		
		//ArrayList와 LinkedList 속도비교
		List<String> aList = new ArrayList<String>();
		List<String> lList = new LinkedList<String>();
		
		long startTime;
		long endTime;
		
		startTime = System.nanoTime();
		
		for(int i = 0; i <1000000; i++) {
			aList.add(String.valueOf(i));
		}
		
		endTime = System.nanoTime();
		
		System.out.println("ArrayList에 순차적으로 데이터를 추가하는데 걸린시간 : " + 
							(endTime - startTime) + "나노초입니다.");
		
		System.out.println("-----------------------------------");
		
		startTime = System.nanoTime();
		
		for(int i = 0; i <1000000; i++) {
			lList.add(String.valueOf(i));
		}
		
		endTime = System.nanoTime();
		
		System.out.println("ArrayList에 순차적으로 데이터를 추가하는데 걸린시간 : " + 
							(endTime - startTime) + "나노초입니다.");
		
		System.out.println("-----------------------------------");
		
		startTime = System.nanoTime();
		
		for(int i = 0; i <1000000; i++) {
			aList.add(String.valueOf(i));
		}
		
		endTime = System.nanoTime();
		
		System.out.println("ArrayList에 순차적으로 데이터를 추가하는데 걸린시간 : " + 
							(endTime - startTime) + "나노초입니다.");
		
		System.out.println("-----------------------------------");
		
		//get(int index) 메소드 속도비교
		startTime = System.nanoTime();
		
		for(int i = 0; i <1000000; i++) {
			aList.add(String.valueOf(i));
		}
		
		endTime = System.nanoTime();
		
		System.out.println("ArrayList에 순차적으로 데이터를 추가하는데 걸린시간 : " + 
							(endTime - startTime) + "나노초입니다.");
		
		System.out.println("-----------------------------------");
		
		//List 중간에 값 추가 속도 비교
		startTime = System.nanoTime();
		
		for(int i = 1000; i < 5000; i++) {
			aList.add(String.valueOf(i));
		}
		
		endTime = System.nanoTime();
		
		System.out.println("ArrayList에 중간에 데이터를 추가하는데 걸린시간 : " + 
							(endTime - startTime) + "나노초입니다.");
	}

}
